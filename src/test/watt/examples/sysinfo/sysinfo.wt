import 'std.sys'
import 'std.convert'
import 'std.jvm'
import 'std.threads'
import 'sysprint.wt'

// –≤—ã–≤–æ–¥
window := new Printer()
os := system.get_info().getOperatingSystem()
processor := system.get_hal().getProcessor()
card := system.get_hal().getGraphicsCards().get(0)

// –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –Ω–∞–≥—Ä—É–∑–∫–µ –ø—Ä–æ—Ü–µ—Å—Å–æ—Ä–∞
cpu_load := 0
ticks := processor.getSystemCpuLoadTicks()
threads.run(fun() {
    while true {
        threads.sleep(1000)
        cpu_load = system.get_hal().getProcessor().getSystemCpuLoadBetweenTicks(ticks)
        ticks = system.get_hal().getProcessor().getSystemCpuLoadTicks()
    }
}, [])

while true {
    window.refresh([
        new Title(
            'üéâ System',
            [
                new Label(
                    'Uptime',
                    os.getSystemUptime()/60
                ),
                new Label(
                    'User',
                    system.get_property('user.name')
                ),
                new Label(
                    'Tasks',
                    os.getProcessCount()
                ),
                new Label(
                    'Arch',
                    os.getBitness() + '-bit'
                )
            ]
        ),
        new Title(
            'üéØ Cpu',
            [
                new Label(
                    'CpuPhysicalCores',
                    processor.getPhysicalProcessorCount()
                ),
                new Label(
                    'CpuLoad',
                    convert.to_int(cpu_load * 100.0) + ' %'
                ),
                new Label(
                    'CpuLogicalCores',
                    processor.getLogicalProcessorCount()
                ),
                new Label(
                    'CpuTemp',
                    system.get_hal().getSensors().getCpuTemperature() + '¬∞C'
                )
            ]
        ),
        new Title(
            'üí° Gpu',
            [
                new Label(
                    '',
                    card.getVersionInfo()
                ),
                new Label(
                    'VRam: ',
                    card.getVRam() / 1024 / 1024 + ' MB'
                )
            ]
        ),
        new Title(
            'üì• Ram',
            [
                new Label(
                    'Memory: ',
                    system.get_hal().getMemory()
                )
            ]
        )
    ])
    threads.sleep(1000)
}